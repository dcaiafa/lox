//
//     __         ______     __  __
//    /\ \       /\  __ \   /\_\_\_\
//    \ \ \____  \ \ \/\ \  \/_/\_\/_
//     \ \_____\  \ \_____\   /\_\/\_\
//      \/_____/   \/_____/   \/_/\/_/
//
//

@token
  ID
  LITERAL
  NUM

  ZERO_OR_MANY '*'
  ONE_OR_MANY  '+'
  ZERO_OR_ONE  '?'

  COMMA        ','
  CPAREN       ')'
  DEFINE       '='
  OPAREN       '('
  OR           '|'
  SEMICOLON    ';'

  TOKEN        '@token'
  LEFT         '@left'
  RIGHT        '@right'
  LIST         '@list' ;

parser    = decl* ;
decl      = rule | token_decl;
rule      = ID DEFINE @list(prod, '|') ';' ;
prod      = term_card+ qualif? ;
term_card = term card? ;
term      = ID | LITERAL | list ;
list      = '@list' '(' term ',' term ')' ;
card      = '*' | '+' | '?' ;
qualif    = '@left' '(' NUM ')'
          | '@right' '(' NUM ')' ;

token_decl = TOKEN token+ ';' ;

token = ID LITERAL? ;
