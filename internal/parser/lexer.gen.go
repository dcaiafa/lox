package parser

var _lexerMode0 = []uint32{
	104, 178, 191, 196, 200, 244, 248, 258, 264, 270, 277, 293, 303, 313,
	329, 339, 355, 371, 381, 397, 410, 426, 436, 452, 480, 502, 518, 528,
	544, 560, 576, 592, 608, 618, 634, 650, 666, 682, 698, 714, 724, 740,
	756, 772, 797, 813, 832, 845, 861, 871, 887, 903, 913, 929, 945, 961,
	977, 987, 1003, 1016, 1032, 1048, 1058, 1080, 1096, 1112, 1122, 1138, 1154, 1170,
	1180, 1193, 1209, 1225, 1241, 1251, 1273, 1289, 1299, 1315, 1331, 1341, 1357, 1373,
	1383, 1399, 1415, 1422, 1438, 1454, 1458, 1474, 1481, 1491, 1495, 1499, 1503, 1507,
	1511, 1515, 1519, 1523, 1527, 1531, 73, 24, 9, 9, 1, 10, 10, 5,
	13, 13, 1, 32, 32, 1, 39, 39, 8, 40, 40, 97, 41, 41,
	96, 42, 42, 91, 43, 43, 86, 44, 44, 103, 45, 45, 95, 47,
	47, 2, 48, 57, 9, 61, 61, 102, 63, 63, 94, 64, 64, 4,
	65, 90, 10, 91, 91, 7, 92, 92, 3, 97, 122, 10, 123, 123,
	100, 124, 124, 101, 125, 125, 99, 126, 126, 98, 12, 3, 9, 9,
	1, 13, 13, 1, 32, 32, 1, 4, 0, 4, 1, 47, 47, 6,
	3, 0, 3, 41, 43, 14, 95, 95, 11, 97, 99, 11, 100, 100,
	42, 101, 101, 23, 102, 102, 49, 103, 107, 11, 108, 108, 62, 109,
	109, 45, 110, 111, 11, 112, 112, 43, 113, 113, 11, 114, 114, 22,
	115, 115, 44, 116, 122, 11, 3, 0, 3, 40, 9, 2, 0, 9,
	6, 11, 1114111, 6, 4, 0, 5, 0, 1, 1, 3, 36, 5, 0,
	1, 2, 5, 0, 6, 1, 48, 57, 9, 3, 34, 15, 4, 48,
	57, 10, 65, 90, 10, 95, 95, 10, 97, 122, 10, 3, 33, 9,
	2, 95, 95, 11, 97, 122, 11, 3, 32, 9, 2, 95, 95, 11,
	97, 122, 11, 3, 28, 15, 4, 95, 95, 11, 97, 115, 11, 116,
	116, 12, 117, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97, 122,
	11, 3, 31, 15, 4, 95, 95, 11, 97, 103, 11, 104, 104, 13,
	105, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 107, 11, 108,
	108, 14, 109, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97, 122,
	11, 3, 30, 15, 4, 95, 95, 11, 97, 102, 11, 103, 103, 15,
	104, 122, 11, 3, 32, 12, 3, 95, 95, 11, 97, 97, 16, 98,
	122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 120, 11, 121, 121,
	17, 122, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97, 122, 11,
	3, 29, 15, 4, 95, 95, 11, 97, 104, 11, 105, 105, 18, 106,
	122, 11, 3, 32, 27, 8, 95, 95, 11, 97, 108, 11, 109, 109,
	24, 110, 113, 11, 114, 114, 36, 115, 119, 11, 120, 120, 33, 121,
	122, 11, 3, 32, 21, 6, 95, 95, 11, 97, 104, 11, 105, 105,
	25, 106, 111, 11, 112, 112, 30, 113, 122, 11, 3, 32, 15, 4,
	95, 95, 11, 97, 115, 11, 116, 116, 21, 117, 122, 11, 3, 32,
	9, 2, 95, 95, 11, 97, 122, 11, 3, 25, 15, 4, 95, 95,
	11, 97, 100, 11, 101, 101, 28, 102, 122, 11, 3, 32, 15, 4,
	95, 95, 11, 97, 113, 11, 114, 114, 29, 115, 122, 11, 3, 32,
	15, 4, 95, 95, 11, 97, 109, 11, 110, 110, 19, 111, 122, 11,
	3, 32, 15, 4, 95, 95, 11, 97, 115, 11, 116, 116, 20, 117,
	122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 113, 11, 114, 114,
	26, 115, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97, 122, 11,
	3, 21, 15, 4, 95, 95, 11, 97, 115, 11, 116, 116, 27, 117,
	122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 114, 11, 115, 115,
	35, 116, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 98, 11,
	99, 99, 58, 100, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97,
	113, 11, 114, 114, 37, 115, 122, 11, 3, 32, 15, 4, 95, 95,
	11, 97, 110, 11, 111, 111, 31, 112, 122, 11, 3, 32, 15, 4,
	95, 95, 11, 97, 102, 11, 103, 103, 32, 104, 122, 11, 3, 32,
	9, 2, 95, 95, 11, 97, 122, 11, 3, 22, 15, 4, 95, 95,
	11, 97, 114, 11, 115, 115, 57, 116, 122, 11, 3, 32, 15, 4,
	95, 95, 11, 97, 113, 11, 114, 114, 71, 115, 122, 11, 3, 32,
	15, 4, 95, 95, 11, 97, 104, 11, 105, 105, 34, 106, 122, 11,
	3, 32, 24, 7, 95, 95, 11, 97, 97, 41, 98, 110, 11, 111,
	111, 50, 112, 116, 11, 117, 117, 40, 118, 122, 11, 3, 32, 15,
	4, 95, 95, 11, 97, 115, 11, 116, 116, 70, 117, 122, 11, 3,
	32, 18, 5, 95, 95, 11, 97, 97, 53, 98, 110, 11, 111, 111,
	54, 112, 122, 11, 3, 32, 12, 3, 95, 95, 11, 97, 97, 38,
	98, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 100, 11, 101,
	101, 39, 102, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97, 122,
	11, 3, 20, 15, 4, 95, 95, 11, 97, 113, 11, 114, 114, 46,
	115, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 111, 11, 112,
	112, 51, 113, 122, 11, 3, 32, 9, 2, 95, 95, 52, 97, 122,
	11, 3, 32, 15, 4, 95, 95, 11, 97, 108, 11, 109, 109, 66,
	110, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 98, 11, 99,
	99, 59, 100, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 99,
	11, 100, 100, 47, 101, 122, 11, 3, 32, 15, 4, 95, 95, 11,
	97, 110, 11, 111, 111, 48, 112, 122, 11, 3, 32, 9, 2, 95,
	95, 11, 97, 122, 11, 3, 19, 15, 4, 95, 95, 11, 97, 103,
	11, 104, 104, 92, 105, 122, 11, 3, 32, 12, 3, 95, 95, 11,
	97, 97, 63, 98, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97,
	113, 11, 114, 114, 55, 115, 122, 11, 3, 32, 15, 4, 95, 95,
	11, 97, 99, 11, 100, 100, 56, 101, 122, 11, 3, 32, 9, 2,
	95, 95, 11, 97, 122, 11, 3, 18, 21, 6, 95, 95, 11, 97,
	100, 11, 101, 101, 75, 102, 104, 11, 105, 105, 72, 106, 122, 11,
	3, 32, 15, 4, 95, 95, 11, 97, 113, 11, 114, 114, 60, 115,
	122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 115, 11, 116, 116,
	61, 117, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97, 122, 11,
	3, 27, 15, 4, 95, 95, 11, 97, 110, 11, 111, 111, 81, 112,
	122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 113, 11, 114, 114,
	64, 115, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 115, 11,
	116, 116, 65, 117, 122, 11, 3, 32, 9, 2, 95, 95, 11, 97,
	122, 11, 3, 26, 12, 3, 95, 95, 11, 97, 97, 67, 98, 122,
	11, 3, 32, 15, 4, 95, 95, 11, 97, 114, 11, 115, 115, 88,
	116, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 114, 11, 115,
	115, 68, 116, 122, 11, 3, 32, 15, 4, 95, 95, 11, 97, 115,
	11, 116, 116, 69, 117, 122, 11, 3, 32, 9, 2, 95, 95, 11,
	97, 122, 11, 3, 17, 21, 6, 95, 95, 11, 97, 101, 11, 102,
	102, 73, 103, 119, 11, 120, 120, 78, 121, 122, 11, 3, 32, 15,
	4, 95, 95, 11, 97, 113, 11, 114, 114, 74, 115, 122, 11, 3,
	32, 9, 2, 95, 95, 11, 97, 122, 11, 3, 24, 15, 4, 95,
	95, 11, 97, 100, 11, 101, 101, 76, 102, 122, 11, 3, 32, 15,
	4, 95, 95, 11, 97, 100, 11, 101, 101, 77, 102, 122, 11, 3,
	32, 9, 2, 95, 95, 11, 97, 122, 11, 3, 23, 15, 4, 95,
	95, 11, 97, 99, 11, 100, 100, 79, 101, 122, 11, 3, 32, 15,
	4, 95, 95, 11, 97, 100, 11, 101, 101, 80, 102, 122, 11, 3,
	32, 9, 2, 95, 95, 11, 97, 122, 11, 3, 16, 15, 4, 95,
	95, 11, 97, 99, 11, 100, 100, 82, 101, 122, 11, 3, 32, 15,
	4, 95, 95, 11, 97, 113, 11, 114, 114, 83, 115, 122, 11, 3,
	32, 6, 1, 63, 63, 89, 3, 13, 15, 4, 95, 95, 11, 97,
	110, 11, 111, 111, 84, 112, 122, 11, 3, 32, 15, 4, 95, 95,
	11, 97, 100, 11, 101, 101, 85, 102, 122, 11, 3, 32, 3, 0,
	3, 15, 15, 4, 95, 95, 11, 97, 108, 11, 109, 109, 87, 110,
	122, 11, 3, 32, 6, 1, 63, 63, 93, 3, 12, 9, 2, 95,
	95, 90, 97, 122, 11, 3, 32, 3, 0, 3, 14, 3, 0, 3,
	11, 3, 0, 3, 10, 3, 0, 3, 9, 3, 0, 3, 8, 3,
	0, 3, 7, 3, 0, 3, 6, 3, 0, 3, 5, 3, 0, 3,
	4, 3, 0, 3, 3, 3, 0, 3, 2,
}

var _lexerMode1 = []uint32{
	13, 36, 40, 51, 79, 90, 94, 105, 111, 122, 133, 144, 155, 22,
	7, 0, 9, 1, 11, 44, 1, 45, 45, 5, 46, 91, 1, 92,
	92, 3, 93, 93, 7, 94, 1114111, 1, 3, 0, 3, 39, 10, 3,
	48, 57, 12, 65, 70, 12, 97, 102, 12, 27, 8, 45, 45, 1,
	85, 85, 2, 92, 92, 1, 110, 110, 1, 114, 114, 1, 116, 116,
	1, 117, 117, 9, 120, 120, 6, 3, 39, 10, 3, 48, 57, 1,
	65, 70, 1, 97, 102, 1, 3, 0, 3, 38, 10, 3, 48, 57,
	4, 65, 70, 4, 97, 102, 4, 5, 0, 2, 0, 3, 37, 10,
	3, 48, 57, 6, 65, 70, 6, 97, 102, 6, 10, 3, 48, 57,
	8, 65, 70, 8, 97, 102, 8, 10, 3, 48, 57, 9, 65, 70,
	9, 97, 102, 9, 10, 3, 48, 57, 10, 65, 70, 10, 97, 102,
	10, 10, 3, 48, 57, 11, 65, 70, 11, 97, 102, 11,
}

var _lexerMode2 = []uint32{
	22, 42, 46, 57, 85, 42, 96, 42, 107, 118, 129, 42, 140, 151,
	162, 173, 42, 184, 195, 206, 212, 223, 19, 6, 0, 9, 1, 11,
	38, 1, 39, 39, 19, 40, 91, 1, 92, 92, 3, 93, 1114111, 1,
	3, 0, 5, 0, 10, 3, 48, 57, 21, 65, 70, 21, 97, 102,
	21, 27, 8, 39, 39, 16, 85, 85, 2, 92, 92, 16, 110, 110,
	16, 114, 114, 16, 116, 116, 16, 117, 117, 18, 120, 120, 15, 5,
	0, 10, 3, 48, 57, 5, 65, 70, 5, 97, 102, 5, 10, 3,
	48, 57, 4, 65, 70, 4, 97, 102, 4, 10, 3, 48, 57, 6,
	65, 70, 6, 97, 102, 6, 10, 3, 48, 57, 7, 65, 70, 7,
	97, 102, 7, 10, 3, 48, 57, 9, 65, 70, 9, 97, 102, 9,
	10, 3, 48, 57, 8, 65, 70, 8, 97, 102, 8, 10, 3, 48,
	57, 10, 65, 70, 10, 97, 102, 10, 10, 3, 48, 57, 11, 65,
	70, 11, 97, 102, 11, 10, 3, 48, 57, 14, 65, 70, 14, 97,
	102, 14, 10, 3, 48, 57, 12, 65, 70, 12, 97, 102, 12, 10,
	3, 48, 57, 13, 65, 70, 13, 97, 102, 13, 5, 0, 2, 0,
	3, 35, 10, 3, 48, 57, 17, 65, 70, 17, 97, 102, 17, 10,
	3, 48, 57, 20, 65, 70, 20, 97, 102, 20,
}

var _lexerModes = [][]uint32{

	_lexerMode0,

	_lexerMode1,

	_lexerMode2,
}

const (
	_lexerConsume  = 0
	_lexerAccept   = 1
	_lexerDiscard  = 2
	_lexerTryAgain = 3
	_lexerEOF      = 4
	_lexerError    = -1
)

type _LexerStateMachine struct {
	token     int
	state     int
	mode      []uint32
	modeStack _Stack[[]uint32]
}

func (l *_LexerStateMachine) PushRune(r rune) int {
	if l.mode == nil {
		l.mode = _lexerMode0
	}

	mode := l.mode

	// Find the table row corresponding to state.
	i := int(mode[int(l.state)])
	count := int(mode[i])
	i++
	end := i + count

	// The format of the row is as follows:
	//
	//   gotoCount uint32
	//   [gotoCount]struct{
	//     rangeBegin uint32
	//     rangeEnd   uint32
	//     gotoState  uint32
	//   }
	//   [actionCount]struct {
	//     actionType  uint32
	//     actionParam uint32
	//   }
	//
	// Where 'actionCount' is determined by the amount of uint32 left in the row.

	gotoN := int(mode[i])
	i++

	// Use binary-search to find the next state.
	b := 0
	e := gotoN
	for b < e {
		j := b + (e-b)/2
		k := i + j*3
		switch {
		case r >= rune(mode[k]) && r <= rune(mode[k+1]):
			l.state = int(mode[k+2])
			return _lexerConsume
		case r < rune(mode[k]):
			e = j
		case r > rune(mode[k+1]):
			b = j + 1
		default:
			panic("not reached")
		}
	}

	// Move 'i' to the beginning of the actions section.
	i += gotoN * 3

	for ; i < end; i += 2 {
		switch mode[i] {
		case 1: // PushMode
			modeIndex := int(mode[i+1])
			l.modeStack.Push(mode)
			l.mode = _lexerModes[modeIndex]
		case 2: // PopMode
			l.mode = l.modeStack.Peek(0)
			l.modeStack.Pop(1)
		case 3: // Accept
			l.token = int(mode[i+1])
			l.state = 0
			return _lexerAccept
		case 4: // Discard
			l.state = 0
			return _lexerDiscard
		case 5: // Accum
			l.state = 0
			return _lexerTryAgain
		}
	}

	if l.state == 0 && r == 0 {
		return _lexerEOF
	}

	return _lexerError
}

func (l *_LexerStateMachine) Reset() {
	l.mode = nil
	l.state = 0
}

func (l *_LexerStateMachine) Token() int {
	return l.token
}
