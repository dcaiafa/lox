Parser Table
============
I0:
  S' = .S, EOF
  S = .ZERO_OR_MORE item*, EOF
  S = .ZERO_OR_MORE_F item*!, EOF
  S = .ONE_OR_MORE item+, EOF
    on ONE_OR_MORE shift I1
    on ZERO_OR_MORE shift I3
    on ZERO_OR_MORE_F shift I4
    on S goto I2
I1:
  S = ONE_OR_MORE .item+, EOF
  item = .TOK, EOF
  item = .TOK, TOK
  item+ = .item+ item, EOF
  item+ = .item+ item, TOK
  item+ = .item, EOF
  item+ = .item, TOK
    on TOK shift I5
    on item goto I6
    on item+ goto I12
I2:
  S' = S., EOF
    on EOF accept
I3:
  S = ZERO_OR_MORE .item*, EOF
  item = .TOK, EOF
  item = .TOK, TOK
  item* = .item+, EOF
  item* = ., EOF
  item+ = .item+ item, EOF
  item+ = .item+ item, TOK
  item+ = .item, EOF
  item+ = .item, TOK
    on EOF reduce item*
    on TOK shift I5
    on item goto I6
    on item* goto I7
    on item+ goto I8
I4:
  S = ZERO_OR_MORE_F .item*!, EOF
  item = .TOK, EOF
  item = .TOK, TOK
  item*! = .item+!, EOF
  item*! = ., EOF
  item+! = .item+! item, EOF
  item+! = .item+! item, TOK
  item+! = .item, EOF
  item+! = .item, TOK
    on EOF reduce item*!
    on TOK shift I5
    on item goto I9
    on item*! goto I10
    on item+! goto I11
I5:
  item = TOK., EOF
  item = TOK., TOK
    on EOF reduce item
    on TOK reduce item
I6:
  item+ = item., EOF
  item+ = item., TOK
    on EOF reduce item+
    on TOK reduce item+
I7:
  S = ZERO_OR_MORE item*., EOF
    on EOF reduce S
I8:
  item = .TOK, EOF
  item = .TOK, TOK
  item* = item+., EOF
  item+ = item+ .item, EOF
  item+ = item+ .item, TOK
    on EOF reduce item*
    on TOK shift I5
    on item goto I13
I9:
  item+! = item., EOF
  item+! = item., TOK
    on EOF reduce item+!
    on TOK reduce item+!
I10:
  S = ZERO_OR_MORE_F item*!., EOF
    on EOF reduce S
I11:
  item = .TOK, EOF
  item = .TOK, TOK
  item*! = item+!., EOF
  item+! = item+! .item, EOF
  item+! = item+! .item, TOK
    on EOF reduce item*!
    on TOK shift I5
    on item goto I14
I12:
  S = ONE_OR_MORE item+., EOF
  item = .TOK, EOF
  item = .TOK, TOK
  item+ = item+ .item, EOF
  item+ = item+ .item, TOK
    on EOF reduce S
    on TOK shift I5
    on item goto I13
I13:
  item+ = item+ item., EOF
  item+ = item+ item., TOK
    on EOF reduce item+
    on TOK reduce item+
I14:
  item+! = item+! item., EOF
  item+! = item+! item., TOK
    on EOF reduce item+!
    on TOK reduce item+!

Lexer Modes
============
$default:
digraph G {
  rankdir="LR";
  0 -> 1 [label="\\t-\\n"];
  0 -> 1 [label="\\r"];
  0 -> 1 [label=" "];
  0 -> 2 [label="o"];
  0 -> 9 [label="x"];
  0 -> 10 [label="z"];
  1 -> 1 [label="\\t-\\n"];
  1 -> 1 [label="\\r"];
  1 -> 1 [label=" "];
  2 -> 4 [label="n"];
  4 -> 6 [label="e"];
  5 -> 22 [label="_"];
  6 -> 8 [label="_"];
  8 -> 11 [label="o"];
  9 -> 9 [label="x"];
  10 -> 18 [label="e"];
  11 -> 12 [label="r"];
  12 -> 13 [label="_"];
  13 -> 14 [label="m"];
  14 -> 15 [label="o"];
  15 -> 16 [label="r"];
  16 -> 3 [label="e"];
  17 -> 27 [label="o"];
  18 -> 17 [label="r"];
  19 -> 5 [label="e"];
  20 -> 21 [label="o"];
  21 -> 19 [label="r"];
  22 -> 7 [label="f"];
  23 -> 20 [label="m"];
  24 -> 23 [label="_"];
  25 -> 24 [label="r"];
  26 -> 25 [label="o"];
  27 -> 26 [label="_"];
  0 [label="0", shape="circle"];
  1 [label="1", shape="doublecircle"];
  2 [label="2", shape="circle"];
  3 [label="3", shape="doublecircle"];
  4 [label="4", shape="circle"];
  5 [label="5", shape="doublecircle"];
  6 [label="6", shape="circle"];
  7 [label="7", shape="doublecircle"];
  8 [label="8", shape="circle"];
  9 [label="9", shape="doublecircle"];
  10 [label="10", shape="circle"];
  11 [label="11", shape="circle"];
  12 [label="12", shape="circle"];
  13 [label="13", shape="circle"];
  14 [label="14", shape="circle"];
  15 [label="15", shape="circle"];
  16 [label="16", shape="circle"];
  17 [label="17", shape="circle"];
  18 [label="18", shape="circle"];
  19 [label="19", shape="circle"];
  20 [label="20", shape="circle"];
  21 [label="21", shape="circle"];
  22 [label="22", shape="circle"];
  23 [label="23", shape="circle"];
  24 [label="24", shape="circle"];
  25 [label="25", shape="circle"];
  26 [label="26", shape="circle"];
  27 [label="27", shape="circle"];
}

Tests
=====
Input:
zero_or_more x xx xxx xxxx xxxxx xxxxxx


Output:
ZERO_OR_MORE 1 2 3 4 5 6

Input:
zero_or_more


Output:
ZERO_OR_MORE

Input:
zero_or_more_f x xx xxx xxxx xxxxx xxxxxx


Output:
ZERO_OR_MORE_F 1 3 5

Input:
zero_or_more_f


Output:
ZERO_OR_MORE_F

Input:
zero_or_more_f xx xxxx


Output:
ZERO_OR_MORE_F

Input:
one_or_more x xx xxx xxxx xxxxx xxxxxx


Output:
ONE_OR_MORE 1 2 3 4 5 6

Input:
one_or_more


Output:
Failed to parse.

