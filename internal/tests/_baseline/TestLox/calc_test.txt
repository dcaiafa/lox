Parser Table
============
I0:
  S' = .S, EOF
  S = .expr, EOF
  S = .ERROR, EOF
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
    on ERROR shift I1
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on S goto I4
    on expr goto I6
    on num goto I7
I1:
  S = ERROR., EOF
    on EOF reduce S
I2:
  num = NUM., EOF
  num = NUM., ADD
  num = NUM., SUB
  num = NUM., MUL
  num = NUM., DIV
  num = NUM., REM
  num = NUM., POW
  num = NUM., C_PAREN
    on ADD reduce num
    on C_PAREN reduce num
    on DIV reduce num
    on EOF reduce num
    on MUL reduce num
    on POW reduce num
    on REM reduce num
    on SUB reduce num
I3:
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = O_PAREN .expr C_PAREN, EOF
  expr = O_PAREN .expr C_PAREN, ADD
  expr = O_PAREN .expr C_PAREN, SUB
  expr = O_PAREN .expr C_PAREN, MUL
  expr = O_PAREN .expr C_PAREN, DIV
  expr = O_PAREN .expr C_PAREN, REM
  expr = O_PAREN .expr C_PAREN, POW
  expr = O_PAREN .expr C_PAREN, C_PAREN
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I14
    on num goto I7
I4:
  S' = S., EOF
    on EOF accept
I5:
  num = SUB .NUM, EOF
  num = SUB .NUM, ADD
  num = SUB .NUM, SUB
  num = SUB .NUM, MUL
  num = SUB .NUM, DIV
  num = SUB .NUM, REM
  num = SUB .NUM, POW
  num = SUB .NUM, C_PAREN
    on NUM shift I15
I6:
  S = expr., EOF
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
    on ADD shift I8
    on DIV shift I9
    on EOF reduce S
    on MUL shift I10
    on POW shift I11
    on REM shift I12
    on SUB shift I13
I7:
  expr = num., EOF
  expr = num., ADD
  expr = num., SUB
  expr = num., MUL
  expr = num., DIV
  expr = num., REM
  expr = num., POW
  expr = num., C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV reduce expr
    on EOF reduce expr
    on MUL reduce expr
    on POW reduce expr
    on REM reduce expr
    on SUB reduce expr
I8:
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = expr ADD .expr, EOF
  expr = expr ADD .expr, ADD
  expr = expr ADD .expr, SUB
  expr = expr ADD .expr, MUL
  expr = expr ADD .expr, DIV
  expr = expr ADD .expr, REM
  expr = expr ADD .expr, POW
  expr = expr ADD .expr, C_PAREN
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I17
    on num goto I7
I9:
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = expr DIV .expr, EOF
  expr = expr DIV .expr, ADD
  expr = expr DIV .expr, SUB
  expr = expr DIV .expr, MUL
  expr = expr DIV .expr, DIV
  expr = expr DIV .expr, REM
  expr = expr DIV .expr, POW
  expr = expr DIV .expr, C_PAREN
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I20
    on num goto I7
I10:
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = expr MUL .expr, EOF
  expr = expr MUL .expr, ADD
  expr = expr MUL .expr, SUB
  expr = expr MUL .expr, MUL
  expr = expr MUL .expr, DIV
  expr = expr MUL .expr, REM
  expr = expr MUL .expr, POW
  expr = expr MUL .expr, C_PAREN
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I19
    on num goto I7
I11:
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = expr POW .expr, EOF
  expr = expr POW .expr, ADD
  expr = expr POW .expr, SUB
  expr = expr POW .expr, MUL
  expr = expr POW .expr, DIV
  expr = expr POW .expr, REM
  expr = expr POW .expr, POW
  expr = expr POW .expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I22
    on num goto I7
I12:
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = expr REM .expr, EOF
  expr = expr REM .expr, ADD
  expr = expr REM .expr, SUB
  expr = expr REM .expr, MUL
  expr = expr REM .expr, DIV
  expr = expr REM .expr, REM
  expr = expr REM .expr, POW
  expr = expr REM .expr, C_PAREN
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I21
    on num goto I7
I13:
  expr = .expr ADD expr, EOF
  expr = .expr ADD expr, ADD
  expr = .expr ADD expr, SUB
  expr = .expr ADD expr, MUL
  expr = .expr ADD expr, DIV
  expr = .expr ADD expr, REM
  expr = .expr ADD expr, POW
  expr = .expr ADD expr, C_PAREN
  expr = .expr SUB expr, EOF
  expr = .expr SUB expr, ADD
  expr = .expr SUB expr, SUB
  expr = .expr SUB expr, MUL
  expr = .expr SUB expr, DIV
  expr = .expr SUB expr, REM
  expr = .expr SUB expr, POW
  expr = .expr SUB expr, C_PAREN
  expr = expr SUB .expr, EOF
  expr = expr SUB .expr, ADD
  expr = expr SUB .expr, SUB
  expr = expr SUB .expr, MUL
  expr = expr SUB .expr, DIV
  expr = expr SUB .expr, REM
  expr = expr SUB .expr, POW
  expr = expr SUB .expr, C_PAREN
  expr = .expr MUL expr, EOF
  expr = .expr MUL expr, ADD
  expr = .expr MUL expr, SUB
  expr = .expr MUL expr, MUL
  expr = .expr MUL expr, DIV
  expr = .expr MUL expr, REM
  expr = .expr MUL expr, POW
  expr = .expr MUL expr, C_PAREN
  expr = .expr DIV expr, EOF
  expr = .expr DIV expr, ADD
  expr = .expr DIV expr, SUB
  expr = .expr DIV expr, MUL
  expr = .expr DIV expr, DIV
  expr = .expr DIV expr, REM
  expr = .expr DIV expr, POW
  expr = .expr DIV expr, C_PAREN
  expr = .expr REM expr, EOF
  expr = .expr REM expr, ADD
  expr = .expr REM expr, SUB
  expr = .expr REM expr, MUL
  expr = .expr REM expr, DIV
  expr = .expr REM expr, REM
  expr = .expr REM expr, POW
  expr = .expr REM expr, C_PAREN
  expr = .expr POW expr, EOF
  expr = .expr POW expr, ADD
  expr = .expr POW expr, SUB
  expr = .expr POW expr, MUL
  expr = .expr POW expr, DIV
  expr = .expr POW expr, REM
  expr = .expr POW expr, POW
  expr = .expr POW expr, C_PAREN
  expr = .O_PAREN expr C_PAREN, EOF
  expr = .O_PAREN expr C_PAREN, ADD
  expr = .O_PAREN expr C_PAREN, SUB
  expr = .O_PAREN expr C_PAREN, MUL
  expr = .O_PAREN expr C_PAREN, DIV
  expr = .O_PAREN expr C_PAREN, REM
  expr = .O_PAREN expr C_PAREN, POW
  expr = .O_PAREN expr C_PAREN, C_PAREN
  expr = .num, EOF
  expr = .num, ADD
  expr = .num, SUB
  expr = .num, MUL
  expr = .num, DIV
  expr = .num, REM
  expr = .num, POW
  expr = .num, C_PAREN
  num = .NUM, EOF
  num = .NUM, ADD
  num = .NUM, SUB
  num = .NUM, MUL
  num = .NUM, DIV
  num = .NUM, REM
  num = .NUM, POW
  num = .NUM, C_PAREN
  num = .SUB NUM, EOF
  num = .SUB NUM, ADD
  num = .SUB NUM, SUB
  num = .SUB NUM, MUL
  num = .SUB NUM, DIV
  num = .SUB NUM, REM
  num = .SUB NUM, POW
  num = .SUB NUM, C_PAREN
    on NUM shift I2
    on O_PAREN shift I3
    on SUB shift I5
    on expr goto I18
    on num goto I7
I14:
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
  expr = O_PAREN expr .C_PAREN, EOF
  expr = O_PAREN expr .C_PAREN, ADD
  expr = O_PAREN expr .C_PAREN, SUB
  expr = O_PAREN expr .C_PAREN, MUL
  expr = O_PAREN expr .C_PAREN, DIV
  expr = O_PAREN expr .C_PAREN, REM
  expr = O_PAREN expr .C_PAREN, POW
  expr = O_PAREN expr .C_PAREN, C_PAREN
    on ADD shift I8
    on C_PAREN shift I16
    on DIV shift I9
    on MUL shift I10
    on POW shift I11
    on REM shift I12
    on SUB shift I13
I15:
  num = SUB NUM., EOF
  num = SUB NUM., ADD
  num = SUB NUM., SUB
  num = SUB NUM., MUL
  num = SUB NUM., DIV
  num = SUB NUM., REM
  num = SUB NUM., POW
  num = SUB NUM., C_PAREN
    on ADD reduce num
    on C_PAREN reduce num
    on DIV reduce num
    on EOF reduce num
    on MUL reduce num
    on POW reduce num
    on REM reduce num
    on SUB reduce num
I16:
  expr = O_PAREN expr C_PAREN., EOF
  expr = O_PAREN expr C_PAREN., ADD
  expr = O_PAREN expr C_PAREN., SUB
  expr = O_PAREN expr C_PAREN., MUL
  expr = O_PAREN expr C_PAREN., DIV
  expr = O_PAREN expr C_PAREN., REM
  expr = O_PAREN expr C_PAREN., POW
  expr = O_PAREN expr C_PAREN., C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV reduce expr
    on EOF reduce expr
    on MUL reduce expr
    on POW reduce expr
    on REM reduce expr
    on SUB reduce expr
I17:
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr ADD expr., EOF
  expr = expr ADD expr., ADD
  expr = expr ADD expr., SUB
  expr = expr ADD expr., MUL
  expr = expr ADD expr., DIV
  expr = expr ADD expr., REM
  expr = expr ADD expr., POW
  expr = expr ADD expr., C_PAREN
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV shift I9
    on EOF reduce expr
    on MUL shift I10
    on POW shift I11
    on REM shift I12
    on SUB reduce expr
I18:
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr SUB expr., EOF
  expr = expr SUB expr., ADD
  expr = expr SUB expr., SUB
  expr = expr SUB expr., MUL
  expr = expr SUB expr., DIV
  expr = expr SUB expr., REM
  expr = expr SUB expr., POW
  expr = expr SUB expr., C_PAREN
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV shift I9
    on EOF reduce expr
    on MUL shift I10
    on POW shift I11
    on REM shift I12
    on SUB reduce expr
I19:
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr MUL expr., EOF
  expr = expr MUL expr., ADD
  expr = expr MUL expr., SUB
  expr = expr MUL expr., MUL
  expr = expr MUL expr., DIV
  expr = expr MUL expr., REM
  expr = expr MUL expr., POW
  expr = expr MUL expr., C_PAREN
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV reduce expr
    on EOF reduce expr
    on MUL reduce expr
    on POW shift I11
    on REM reduce expr
    on SUB reduce expr
I20:
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr DIV expr., EOF
  expr = expr DIV expr., ADD
  expr = expr DIV expr., SUB
  expr = expr DIV expr., MUL
  expr = expr DIV expr., DIV
  expr = expr DIV expr., REM
  expr = expr DIV expr., POW
  expr = expr DIV expr., C_PAREN
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV reduce expr
    on EOF reduce expr
    on MUL reduce expr
    on POW shift I11
    on REM reduce expr
    on SUB reduce expr
I21:
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr REM expr., EOF
  expr = expr REM expr., ADD
  expr = expr REM expr., SUB
  expr = expr REM expr., MUL
  expr = expr REM expr., DIV
  expr = expr REM expr., REM
  expr = expr REM expr., POW
  expr = expr REM expr., C_PAREN
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV reduce expr
    on EOF reduce expr
    on MUL reduce expr
    on POW shift I11
    on REM reduce expr
    on SUB reduce expr
I22:
  expr = expr .ADD expr, EOF
  expr = expr .ADD expr, ADD
  expr = expr .ADD expr, SUB
  expr = expr .ADD expr, MUL
  expr = expr .ADD expr, DIV
  expr = expr .ADD expr, REM
  expr = expr .ADD expr, POW
  expr = expr .ADD expr, C_PAREN
  expr = expr .SUB expr, EOF
  expr = expr .SUB expr, ADD
  expr = expr .SUB expr, SUB
  expr = expr .SUB expr, MUL
  expr = expr .SUB expr, DIV
  expr = expr .SUB expr, REM
  expr = expr .SUB expr, POW
  expr = expr .SUB expr, C_PAREN
  expr = expr .MUL expr, EOF
  expr = expr .MUL expr, ADD
  expr = expr .MUL expr, SUB
  expr = expr .MUL expr, MUL
  expr = expr .MUL expr, DIV
  expr = expr .MUL expr, REM
  expr = expr .MUL expr, POW
  expr = expr .MUL expr, C_PAREN
  expr = expr .DIV expr, EOF
  expr = expr .DIV expr, ADD
  expr = expr .DIV expr, SUB
  expr = expr .DIV expr, MUL
  expr = expr .DIV expr, DIV
  expr = expr .DIV expr, REM
  expr = expr .DIV expr, POW
  expr = expr .DIV expr, C_PAREN
  expr = expr .REM expr, EOF
  expr = expr .REM expr, ADD
  expr = expr .REM expr, SUB
  expr = expr .REM expr, MUL
  expr = expr .REM expr, DIV
  expr = expr .REM expr, REM
  expr = expr .REM expr, POW
  expr = expr .REM expr, C_PAREN
  expr = expr .POW expr, EOF
  expr = expr .POW expr, ADD
  expr = expr .POW expr, SUB
  expr = expr .POW expr, MUL
  expr = expr .POW expr, DIV
  expr = expr .POW expr, REM
  expr = expr .POW expr, POW
  expr = expr .POW expr, C_PAREN
  expr = expr POW expr., EOF
  expr = expr POW expr., ADD
  expr = expr POW expr., SUB
  expr = expr POW expr., MUL
  expr = expr POW expr., DIV
  expr = expr POW expr., REM
  expr = expr POW expr., POW
  expr = expr POW expr., C_PAREN
    on ADD reduce expr
    on C_PAREN reduce expr
    on DIV reduce expr
    on EOF reduce expr
    on MUL reduce expr
    on POW reduce expr
    on REM reduce expr
    on SUB reduce expr

Lexer Modes
============
$default:
digraph G {
  rankdir="LR";
  0 -> 1 [label="\\t-\\n"];
  0 -> 1 [label="\\r"];
  0 -> 1 [label=" "];
  0 -> 2 [label=")"];
  0 -> 3 [label="("];
  0 -> 4 [label="^"];
  0 -> 5 [label="%"];
  0 -> 6 [label="/"];
  0 -> 7 [label="*"];
  0 -> 8 [label="\\-"];
  0 -> 9 [label="+"];
  0 -> 10 [label="0-9"];
  1 -> 1 [label="\\t-\\n"];
  1 -> 1 [label="\\r"];
  1 -> 1 [label=" "];
  10 -> 10 [label="0-9"];
  0 [label="0", shape="circle"];
  1 [label="1", shape="doublecircle"];
  2 [label="2", shape="doublecircle"];
  3 [label="3", shape="doublecircle"];
  4 [label="4", shape="doublecircle"];
  5 [label="5", shape="doublecircle"];
  6 [label="6", shape="doublecircle"];
  7 [label="7", shape="doublecircle"];
  8 [label="8", shape="doublecircle"];
  9 [label="9", shape="doublecircle"];
  10 [label="10", shape="doublecircle"];
}

Tests
=====
Input:
1 + 2 * 3

Output:
7

Input:
1 + 2
* 3


Output:
7

Input:
-10

Output:
-10

Input:


Output:
expr:1:1: Unexpected EOF
Errors occurred.

Input:
1 + 2 + 

Output:
expr:1:9: Unexpected EOF
Errors occurred.

Input:
1 +* 2

Output:
expr:1:4: Unexpected MUL
Errors occurred.

