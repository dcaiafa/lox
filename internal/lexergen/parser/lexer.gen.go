package parser



var _lexerMode0 = []uint32 {
	84, 152, 165, 170, 180, 203, 209, 214, 220, 225, 232, 237, 253, 258, 
263, 267, 272, 276, 281, 286, 291, 295, 300, 305, 309, 314, 319, 323, 
328, 333, 337, 342, 350, 354, 359, 364, 368, 373, 378, 382, 387, 392, 
396, 401, 406, 410, 418, 422, 427, 432, 436, 441, 448, 456, 460, 465, 
472, 480, 484, 489, 493, 498, 502, 513, 517, 522, 527, 531, 536, 540, 
545, 549, 554, 558, 563, 567, 572, 577, 581, 586, 591, 596, 600, 605, 
67, 22, 9, 10, 1, 13, 13, 1, 32, 32, 1, 39, 39, 7, 
40, 40, 63, 41, 41, 61, 42, 42, 55, 43, 43, 51, 44, 44, 
77, 47, 47, 2, 48, 57, 9, 59, 59, 81, 61, 61, 74, 63, 
63, 59, 64, 64, 4, 65, 90, 11, 91, 91, 5, 97, 122, 11, 
123, 123, 70, 124, 124, 72, 125, 125, 68, 126, 126, 66, 12, 3, 
9, 10, 1, 13, 13, 1, 32, 32, 1, 4, 0, 4, 1, 47, 
47, 3, 9, 2, 0, 9, 3, 11, 65535, 3, 4, 0, 22, 7, 
101, 101, 15, 102, 102, 24, 108, 108, 52, 109, 109, 31, 112, 112, 
62, 114, 114, 6, 115, 115, 45, 5, 0, 1, 1, 3, 32, 4, 
1, 105, 105, 8, 5, 0, 1, 2, 5, 0, 4, 1, 103, 103, 
10, 6, 1, 48, 57, 9, 3, 30, 4, 1, 104, 104, 13, 15, 
4, 48, 57, 11, 65, 90, 11, 95, 95, 11, 97, 122, 11, 3, 
29, 4, 1, 105, 105, 48, 4, 1, 116, 116, 14, 3, 0, 3, 
28, 4, 1, 114, 114, 21, 3, 0, 3, 25, 4, 1, 104, 104, 
82, 4, 1, 116, 116, 32, 4, 1, 111, 111, 22, 3, 0, 3, 
21, 4, 1, 114, 114, 19, 4, 1, 114, 114, 16, 3, 0, 3, 
22, 4, 1, 114, 114, 25, 4, 1, 97, 97, 28, 3, 0, 3, 
20, 4, 1, 111, 111, 42, 4, 1, 103, 103, 20, 3, 0, 3, 
19, 4, 1, 114, 114, 43, 7, 2, 97, 97, 40, 111, 111, 34, 
3, 0, 3, 18, 4, 1, 97, 97, 50, 4, 1, 100, 100, 37, 
3, 0, 3, 27, 4, 1, 116, 116, 35, 4, 1, 101, 101, 23, 
3, 0, 3, 26, 4, 1, 116, 116, 38, 4, 1, 99, 99, 30, 
3, 0, 3, 17, 4, 1, 100, 100, 71, 4, 1, 111, 111, 26, 
3, 0, 3, 24, 7, 2, 107, 107, 12, 116, 116, 33, 3, 0, 
3, 23, 4, 1, 114, 114, 80, 4, 1, 112, 112, 29, 3, 0, 
3, 16, 4, 1, 114, 114, 18, 6, 1, 63, 63, 53, 3, 13, 
7, 2, 101, 101, 56, 105, 105, 54, 3, 0, 3, 15, 4, 1, 
115, 115, 36, 6, 1, 63, 63, 57, 3, 12, 7, 2, 102, 102, 
39, 120, 120, 58, 3, 0, 3, 14, 4, 1, 101, 101, 60, 3, 
0, 3, 11, 4, 1, 114, 114, 41, 3, 0, 3, 10, 10, 3, 
97, 97, 47, 111, 111, 65, 117, 117, 73, 3, 0, 3, 9, 4, 
1, 101, 101, 83, 4, 1, 112, 112, 67, 3, 0, 3, 8, 4, 
1, 95, 95, 69, 3, 0, 3, 7, 4, 1, 109, 109, 27, 3, 
0, 3, 6, 4, 1, 101, 101, 44, 3, 0, 3, 5, 4, 1, 
115, 115, 17, 3, 0, 3, 4, 4, 1, 100, 100, 76, 4, 1, 
101, 101, 46, 3, 0, 3, 3, 4, 1, 111, 111, 75, 4, 1, 
109, 109, 78, 4, 1, 115, 115, 64, 3, 0, 3, 2, 4, 1, 
95, 95, 79, 4, 1, 114, 114, 49, 
}



var _lexerMode1 = []uint32 {
	13, 36, 40, 51, 79, 90, 94, 105, 111, 122, 133, 144, 155, 22, 
7, 0, 9, 1, 11, 44, 1, 45, 45, 5, 46, 91, 1, 92, 
92, 3, 93, 93, 7, 94, 65535, 1, 3, 0, 3, 35, 10, 3, 
48, 57, 12, 65, 70, 12, 97, 102, 12, 27, 8, 45, 45, 1, 
85, 85, 2, 92, 92, 1, 110, 110, 1, 114, 114, 1, 116, 116, 
1, 117, 117, 9, 120, 120, 6, 3, 35, 10, 3, 48, 57, 1, 
65, 70, 1, 97, 102, 1, 3, 0, 3, 34, 10, 3, 48, 57, 
4, 65, 70, 4, 97, 102, 4, 5, 0, 2, 0, 3, 33, 10, 
3, 48, 57, 6, 65, 70, 6, 97, 102, 6, 10, 3, 48, 57, 
8, 65, 70, 8, 97, 102, 8, 10, 3, 48, 57, 9, 65, 70, 
9, 97, 102, 9, 10, 3, 48, 57, 10, 65, 70, 10, 97, 102, 
10, 10, 3, 48, 57, 11, 65, 70, 11, 97, 102, 11, 
}



var _lexerMode2 = []uint32 {
	22, 42, 46, 57, 85, 42, 96, 42, 107, 118, 129, 42, 140, 151, 
162, 173, 42, 184, 195, 206, 212, 223, 19, 6, 0, 9, 1, 11, 
38, 1, 39, 39, 19, 40, 91, 1, 92, 92, 3, 93, 65535, 1, 
3, 0, 5, 0, 10, 3, 48, 57, 21, 65, 70, 21, 97, 102, 
21, 27, 8, 39, 39, 16, 85, 85, 2, 92, 92, 16, 110, 110, 
16, 114, 114, 16, 116, 116, 16, 117, 117, 18, 120, 120, 15, 5, 
0, 10, 3, 48, 57, 5, 65, 70, 5, 97, 102, 5, 10, 3, 
48, 57, 4, 65, 70, 4, 97, 102, 4, 10, 3, 48, 57, 6, 
65, 70, 6, 97, 102, 6, 10, 3, 48, 57, 7, 65, 70, 7, 
97, 102, 7, 10, 3, 48, 57, 9, 65, 70, 9, 97, 102, 9, 
10, 3, 48, 57, 8, 65, 70, 8, 97, 102, 8, 10, 3, 48, 
57, 10, 65, 70, 10, 97, 102, 10, 10, 3, 48, 57, 11, 65, 
70, 11, 97, 102, 11, 10, 3, 48, 57, 14, 65, 70, 14, 97, 
102, 14, 10, 3, 48, 57, 12, 65, 70, 12, 97, 102, 12, 10, 
3, 48, 57, 13, 65, 70, 13, 97, 102, 13, 5, 0, 2, 0, 
3, 31, 10, 3, 48, 57, 17, 65, 70, 17, 97, 102, 17, 10, 
3, 48, 57, 20, 65, 70, 20, 97, 102, 20, 
}




var _lexerModes = [][]uint32 {

	_lexerMode0,

	_lexerMode1,

	_lexerMode2,

}


const (
	_lexerConsume  = 0
	_lexerAccept   = 1
	_lexerDiscard  = 2
	_lexerTryAgain = 3
	_lexerEOF      = 4
	_lexerError    = -1
)

type _LexerStateMachine struct {
	token int
	state int
	mode  []uint32
	modeStack _Stack[[]uint32]
}

func (l *_LexerStateMachine) PushRune(r rune) int {
	if l.mode == nil {
		l.mode = _lexerMode0
	}

	mode := l.mode

	// Find the table row corresponding to state.
	i := int(mode[int(l.state)])
	count := int(mode[i])
	i++
	end := i + count

	// The format of the row is as follows:
	//
	//   gotoCount uint32
	//   [gotoCount]struct{
	//     rangeBegin uint32
	//     rangeEnd   uint32
	//     gotoState  uint32
	//   }
	//   [actionCount]struct {
	//     actionType  uint32
	//     actionParam uint32
	//   }
	//
	// Where 'actionCount' is determined by the amount of uint32 left in the row.

	gotoN := int(mode[i])
	i++

	// Use binary-search to find the next state.
	b := 0
	e := gotoN
	for b < e {
		j := b + (e-b)/2
		k := i + j*3
		switch {
		case r >= rune(mode[k]) && r <= rune(mode[k+1]):
			l.state = int(mode[k+2])
			return _lexerConsume
		case r < rune(mode[k]):
			e = j
		case r > rune(mode[k+1]):
			b = j + 1
		default:
			panic("not reached")
		}
	}

	// Move 'i' to the beginning of the actions section.
	i += gotoN * 3

	for ; i < end; i += 2 {
		switch mode[i] {
		case 1: // PushMode
			modeIndex := int(mode[i+1])
			l.modeStack.Push(mode)
			l.mode = _lexerModes[modeIndex]
		case 2: // PopMode
			l.mode = l.modeStack.Peek(0)
			l.modeStack.Pop(1)
		case 3: // Accept
			l.token = int(mode[i+1])
			l.state = 0
			return _lexerAccept
		case 4: // Discard
			l.state = 0
			return _lexerDiscard
		case 5: // Accum
			l.state = 0
			return _lexerTryAgain
		}
	}

	if l.state == 0 && r == 0 {
		return _lexerEOF
	}

	return _lexerError}

func (l *_LexerStateMachine) Reset() {
	l.mode = nil
	l.state = 0
}

func (l *_LexerStateMachine) Token() int {
	return l.token
}
